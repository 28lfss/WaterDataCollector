package org.luiz.sa.waterdatacollector;

import org.luiz.sa.waterdatacollector.model.WaterDataSimplified;
import org.luiz.sa.waterdatacollector.model.WaterDataValuesLists;
import org.luiz.sa.waterdatacollector.model.WaterData;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.web.bind.annotation.*;

import java.sql.SQLException;
import java.time.Instant;

@RestController
@CrossOrigin(origins = "*")
public class WaterDataCollectorController {
    @Autowired
    private WaterDataCollectorService service;

    @GetMapping("/")
    public String index() throws SQLException {
        return "Greetings from Spring Boot!";
    }

    @GetMapping("/getLastHourReadsByDeviceId") // Return an object(DeviceReadValues) with a list of each sensor data in the past hour.
    public WaterDataValuesLists lastHourReadingData(@RequestParam String deviceId) throws SQLException {
        return service.loadAllSensorsValuesByDeviceId(deviceId);
    }

    @GetMapping("/getLastReadData") // Return an object(WaterData) with the last data generated by the device.
    public WaterData lastReadData(@RequestParam String deviceId) throws SQLException {
        return service.loadLastReading(deviceId);
    }

    @GetMapping("/getAverageValues") //Return an object(AverageDeviceReadValues) each contains the average of each sensor data, from the past hour.
    public WaterDataSimplified averageValue(@RequestParam String deviceId) throws SQLException {
        return service.averageValueLastHourReads(deviceId);
    }

    @PostMapping("/postDeviceData")
    public void post(@RequestParam String deviceId, @RequestParam float ph, @RequestParam float temperature, @RequestParam int tds) throws SQLException {
        WaterData waterData = new WaterData();
        waterData.setDeviceId(deviceId);
        waterData.setPh(ph);
        waterData.setTemperature(temperature);
        waterData.setTds(tds);
        waterData.setTimestamp(Instant.now().toEpochMilli());
        service.saveData(waterData);
    }

}
